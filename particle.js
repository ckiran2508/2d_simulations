const Particle={position:null,velocity:null,acceleration:null,radius:0,colour:null,mass:0,charge:0,theta:0,omega:0,alpha:0,create:function(t,i,o,e,s){var a=Object.create(this);return a.position=Vector.create(t,i),a.velocity=Vector.create(0,0),a.acceleration=Vector.create(0,0),a.radius=o,a.colour=e,a.mass=s,a.theta=0,a.omega=0,a.alpha=0,a},updatePosition:function(){this.position.addTo(this.velocity)},gravitateTo:function(t){var i=t.mass/this.position.diffMagSquared(t.position),o=this.position.dirTo(t.position);this.acceleration.setMag(i),this.acceleration.setDir(o),this.velocity.addTo(this.acceleration)},coulombRepulsiveFrom:function(t){var i=t.mass/this.position.diffMagSquared(t.position),o=-this.position.dirTo(t.position);this.acceleration.setMag(i),this.acceleration.setDir(o),this.velocity.addTo(this.acceleration)},resolveIfCollision:function(t){a=this,b=t;var i=Vector.VectorDiff(a.position,b.position);if(0!==i.getMag()&&i.getMag()<=a.radius+b.radius){const t=i.divide(i.getMag()),o=t.normalVector(),e=a.velocity.dotProduct(t),s=b.velocity.dotProduct(t),c=a.velocity.dotProduct(o),r=b.velocity.dotProduct(o),n=(e*(a.radius-b.radius)+2*b.radius*s)/(a.radius+b.radius),l=(s*(b.radius-a.radius)+2*a.radius*e)/(a.radius+b.radius);a.velocity=Vector.VectorSum(t.multiply(n),o.multiply(c)),b.velocity=Vector.VectorSum(t.multiply(l),o.multiply(r))}},moveAround:function(t){var i=Vector.VectorDiff(this.position,t.position),o=i.divide(i.getMag()),e=o.normalVector(),s=e.multiply(e.dotProduct(this.velocity)),a=s.getMag()*s.getMag()/i.getMag(),c=o.multiply(a);this.velocity=Vector.VectorSum(c,s),this.velocity.addTo(this.acceleration);var r=Vector.VectorSum(i,this.velocity);r.setMag(i.getMag()),this.position=Vector.VectorDiff(r,t.position)},motionInAMagneticField:function(t){if(this.position.getX()>t.x1&&this.position.getY()>t.y1&&this.position.getX()<t.x2&&this.position.getY()<t.y2){var i=t.strength*this.charge*this.velocity.getMag(),o=this.mass*this.velocity.getMag()/(t.strength*this.charge),e=Vector.create(0,0);e.setMag(o),e.setDir(this.velocity.getDir()+Math.PI/2);var s=e.unitVector().multiply(i);this.velocity.addTo(s)}},handleBoundaries:function(t,i){this.position._x-this.radius<=0||this.position._x+this.radius>=t?this.velocity._x=-this.velocity._x:(this.position._y-this.radius<=0||this.position._y+this.radius>=i)&&(this.velocity._y=-this.velocity._y)}};